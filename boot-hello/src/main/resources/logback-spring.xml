<?xml version="1.0" encoding="UTF-8" ?>

<configuration debug="true">
    <property name="pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}-[%line] - %msg%n"/>
    <!-- 使用该标签，可以读取配置文件的设置 -->
    <springProperty scope="context" name="log.path" source="spring.application.log.path"
                    defaultValue="/data/logs/monitor-auth"/>
    <!-- 标准输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 输出到文件，该 appender 命名为 file  -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 基于时间切分的滚动日志 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 文件路径及文件名 -->
            <fileNamePattern>${log.path}/auth_info.%d{yyyyMMdd}.log</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 输出到文件，该 appender 命名为 http -->
    <appender name="http" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 设置过滤器 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <!-- 基于时间切分的滚动日志 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 文件路径及文件名 -->
            <fileNamePattern>${log.path}/auth_http_analysis.%d{yyyyMMdd}.log</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <!-- 重启时清理超期的历史日志 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <logger name="http" level="INFO" additivity="false">
        <appender-ref ref="http"/>
    </logger>

    <!-- 输出到文件，该 appender 命名为 outgoing -->
    <appender name="outgoing" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 设置过滤器 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/auth_outgoing.%d{yyyyMMdd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <logger name="outgoing" level="INFO" additivity="false">
        <appender-ref ref="outgoing"/>
    </logger>

    <!-- email begin -->
    <!-- SMTP server的地址，必需指定。如网易126的SMTP服务器地址是： smtp.126.com -->
    <property name="smtpHost" value="smtp.qiye.163.com"/>
    <!-- SMTP server的端口地址。默认值：25 -->
    <property name="smtpPort" value="465"/>
    <!-- 发送邮件账号 -->
    <property name="username" value="dongrui@aerozhonghuan.com"/>
    <!-- 发送邮件密码（此密码为网易126邮箱的客户端授权密码，不是邮箱登录密码，126邮箱需要开启POP3/SMTP服务、IMAP/SMTP服务才可使用） -->
    <property name="password" value="Newjob#0722"/>
    <!-- 如果设置为true，appender将会使用SSL连接到日志服务器。默认值：false -->
    <property name="SSL" value="true"/>
    <!-- 指定发送到那个邮箱，可设置多个<to>属性，指定多个目的邮箱，收件人账号多个可以逗号隔开 -->
    <property name="email_to" value="xuesongzhulin@126.com"/>
    <!-- 指定发件人名称。 -->
    <property name="email_from" value="dongrui@aerozhonghuan.com" />
    <!-- 指定emial的标题，它需要满足PatternLayout中的格式要求。如果设置成“Log: %logger - %msg”，就案例来讲，则发送邮件时， -->
    <!-- 标题为“【Error】: com.****.****Task - null.equals”。  -->
    <property name="email_subject" value="【boot-hello error】: %logger - %msg" />

    <!-- 邮件发送的appender -->
    <appender name="errorEmail" class="ch.qos.logback.classic.net.SMTPAppender">
        <smtpHost>${smtpHost}</smtpHost>
        <smtpPort>${smtpPort}</smtpPort>
        <username>${username}</username>
        <password>${password}</password>
        <asynchronousSending>true</asynchronousSending>
        <SSL>${SSL}</SSL>
        <to>${email_to}</to>
        <from>${email_from}</from>
        <subject>${email_subject}</subject>

        <!-- html格式 -->
        <layout class="ch.qos.logback.classic.html.HTMLLayout">
            <Pattern>%date%level%thread%logger{0}%line%message</Pattern>
        </layout>
        <!-- 这里采用等级过滤器，指定等级相符才发送，这里指定ERROR级别才发送 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 每个电子邮件只发送一个日志条目 -->
        <cyclicBufferTracker class="ch.qos.logback.core.spi.CyclicBufferTracker">
            <bufferSize>1</bufferSize>
        </cyclicBufferTracker>
    </appender>
    <!-- email end-->

    <!--root config  -->
    <root>
        <level value="INFO"/>
        <appender-ref ref="file"/>
    </root>

    <springProfile name="default,local,test,dev,uat">
        <root>
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="file"/>
        </root>
        <logger name="com.navinfo.management" level="DEBUG"/>
    </springProfile>

    <springProfile name="test1">
        <logger name="com.navinfo.management" level="DEBUG"/>
    </springProfile>

</configuration>